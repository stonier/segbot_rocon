#!/usr/bin/env python
#
# Experiment launcher responsible for spawning processes and concert services
# to run an experiment for a given user

import bwi_tools
import roslib
import rospy

from bwi_guidance import ExperimentServer
from concert_msgs.srv import EnableService, EnableServiceRequest

class ConcertExperimentLauncher:

    def __init__(self):

        rospy.loginfo("Waiting for the concert service manager...")
        rospy.wait_for_service('/concert/services/enable')
        rospy.loginfo("  Found!")
        self.enable_service = rospy.ServiceProxy('/concert/services/enable', EnableService)

        # List of current enabled services
        self.services = []

        # Information required for launching roslaunch processes
        self.package = rospy.get_param("package")
        self.script = rospy.get_param("script")
        self.logs_folder = rospy.get_param("logs_folder",
                 roslib.packages.get_pkg_dir("bwi_guidance") + "/logs")
        self.processes = []

    def _close_all_services(self):
        for service in self.services:
            req = EnableServiceRequest(name=service, enable=False)
            self.enable_service(req)
        self.services = []

    def _close_all_processes(self):
        for process in self.processes:
            bwi_tools.stop_roslaunch_process(process)
        self.processes = []

    def shutdown(self):
        self._close_all_services()
        self._close_all_processes()

    def start_experiment(self, uid, name, email, use_heuristic):

        # # Enable the gazebo service
        # services = [
        #     'bwi_guidance_gazebo_service'#,
        #     #'bwi_guidance_experiment_service'
        # ]
        # for service in services:
        #     req = EnableServiceRequest(name=service, enable=True)
        #     self.enable_service(req)
        #     self.services.append(service)

        # Enable the experiment module
        # log_file = self.logs_folder + "/" + uid + ".log"
        # self.log = open(log_file, "w")
        # rospy.loginfo("  Log at: " + log_file)
        use_heuristic_text = 'true' if use_heuristic else 'false'
        rospy.loginfo("  use heuristic: " + use_heuristic_text)
        process = bwi_tools.start_roslaunch_process(
            self.package, self.script,
            args={'uid': uid, 'name': name, 'email': email, 
                  'use_heuristic': use_heuristic_text})#,
            # log=self.log)
        self.processes.append(process)

    def stop_experiment(self):
        self._close_all_services()
        self._close_all_processes()

if __name__ == '__main__':
    try:
        launcher = ConcertExperimentLauncher()
        server = ExperimentServer(experiment_launcher=launcher)
        server.start()
    except rospy.ROSInterruptException:
        pass

